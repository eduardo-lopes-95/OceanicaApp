name: dockercompose17841332576975545143
services:
  mysql:
    command:
    - --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: OceanicaDb
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: root
    image: mysql:8.0
    networks:
      app-network: null
    ports:
    - mode: ingress
      target: 3307
      published: "3307"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mysql-data
      target: /var/lib/mysql
      volume: {}
  oceanica_app:
    build:
      context: C:\Users\07-05-007\Documents\Project\OceanicaApp\oceanica_app
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: oceanica_app
      target: base
    container_name: oceanica_app
    depends_on:
      mysql:
        condition: service_started
    entrypoint:
    - C:\remote_debugger\x64\msvsmon.exe
    - /noauth
    - /anyuser
    - /silent
    - /nostatus
    - /noclrwarn
    - /nosecuritywarn
    - /nofirewallwarn
    - /nowowwarn
    - /timeout:2147483646
    - /LogDebuggeeOutputToStdOut
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: c:\.nuget\fallbackpackages
      NUGET_PACKAGES: C:\.nuget\packages
    image: oceanicaapp:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath c:\.nuget\packages
        --additionalProbingPath c:\.nuget\fallbackpackages  ""'
      com.microsoft.visualstudio.debuggee.killprogram: C:\remote_debugger\x64\utils\KillProcess.exe
        dotnet.exe
      com.microsoft.visualstudio.debuggee.program: '"C:\Program Files\dotnet\dotnet.exe"'
      com.microsoft.visualstudio.debuggee.workingdirectory: C:\app
    networks:
      app-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "5000"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\win10-x64\net7.0
      target: C:\TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\AppData\Roaming/ASP.NET/Https
      target: C:\Users\ContainerUser\AppData\Roaming\ASP.NET\Https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\AppData\Roaming/Microsoft/UserSecrets
      target: C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApp\oceanica_app
      target: C:\app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\onecoremsvsmon\17.6.10418.2696
      target: C:\remote_debugger
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApp\oceanica_app
      target: C:\src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\dotnet\sdk\NuGetFallbackFolder
      target: c:\.nuget\fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\.nuget\packages\
      target: c:\.nuget\packages
      read_only: true
      bind:
        create_host_path: true
  react-app:
    command:
    - npm
    - start
    image: node:14-alpine
    networks:
      app-network: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApp\oceanica_app\react-app
      target: /app
      bind:
        create_host_path: true
    working_dir: /app
networks:
  app-network:
    name: dockercompose17841332576975545143_app-network
    driver: bridge
volumes:
  mysql-data:
    name: dockercompose17841332576975545143_mysql-data